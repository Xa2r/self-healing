#!/bin/bash

### BEGIN INIT INFO
# Provides:          target
# Required-Start:    $local_fs $network
# Required-Stop:     $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: target
# Description:       tidak ada yang aman dari yang teraman, karena keamanan itu bukan datang dari orang lain melainkan datang dari diri sendiri!!!
### END INIT INFO

DAEMON_PATH="/root/"

DAEMON=python
DAEMONOPTS="apps.py"

NAME=target
DESC="${NAME}"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

mysql_user="postgres"
mysql_password="root"
mysql_host="localhost"
mysql_db="stta"

path="psql"
backup_parent_dir="/var/backups"
#pathpy="/root/Documents/tugas_akhir/aplikasi"
pathdump="pg_dump"

if [ -z "${mysql_password}" ]; then
  echo -n "Enter ${mysql_user} password: "
  read -s mysql_password
  echo
fi

echo exit | PGPASSWORD=${mysql_password} $path --user=${mysql_user} --host=${mysql_host}
#if [ "$?" -gt 0 ]; then
#  echo "${mysql_user} password incorrect"
#  exit 1
#else
#  echo "${mysql_user} password correct."
#fi

case "$1" in
start)
        printf "%-50s" "Starting $NAME..."
        backup_dir="${backup_parent_dir}"
        PGPASSWORD=${mysql_password} $pathdump --user=${mysql_user} --host=${mysql_host} $mysql_db > "${backup_dir}/beckup_data.sql"
        chmod 600 "${backup_dir}/beckup_data.sql"
        createdb=`echo 'create database dbstta' | PGPASSWORD=${mysql_password} $path --user=${mysql_user} --host=${mysql_host}`
        PGPASSWORD=${mysql_password} $path --user=${mysql_user} --host=${mysql_host} dbstta < "${backup_dir}/beckup_data.sql"

        sleep 3s
        file="${backup_dir}/*"
        if [ $file ]; then
          rm -f $file
        fi

        cd $DAEMON_PATH
        PID=`$DAEMON $DAEMONOPTS > /dev/null 2>&1 & echo $!`
  #echo "Saving PID" $PID " to " $PIDFILE
        if [ -z $PID ]; then
            printf "%s\n" "Fail"
        else
            echo $PID > $PIDFILE
            printf "%s\n" "Ok"
        fi
;;
status)
        printf "%-50s" "Checking $NAME..."
        if [ -f $PIDFILE ]; then
            PID=`cat $PIDFILE`
            if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
                printf "%s\n" "Process dead but pidfile exists"
            else
                echo "Running"
            fi
        else
            printf "%s\n" "Service not running"
        fi
;;
stop)
    echo 'drop database dbstta' | PGPASSWORD=${mysql_password} $path --user=${mysql_user} --host=${mysql_host}
    echo "$NAME."
    rm -f $PIDFILE
        printf "%-50s" "Stopping $NAME"
            PID=`cat $PIDFILE`
            cd $DAEMON_PATH
        if [ -f $PIDFILE ]; then
            kill -HUP $PID
            printf "%s\n" "Ok"
            rm -f $PIDFILE
        else
            printf "%s\n" "pidfile not found"
        fi
;;

restart)
    $0 stop
    $0 start
;;

*)
        echo "Usage: $0 {status|start|stop|restart}" >$2
        exit 1
esac